function [fitresult, gof] = weighted_slope(xs, ys, vd)
%%%%CREATEFIT(XS,YS,VD)
%%%%  Create a fit.
%%%%
%%%%  Data for 'untitled fit 1' fit:
%%%%     X Input : xs
%%%%      Y Output: ys
%%%%      Weights : vd
%%%%  Output:
%%%%      fitresult : a fit object representing the fit.
%%%%      gof : structure with goodness-of fit info.
%%%%
%%%%  See also FIT, CFIT, SFIT.

%%%%  Auto-generated by MATLAB on 02-Jul-2014 15:32:20


% Inputs:
% xs: column indices of the contour (time bin number)
% ys: row indices of the contour (freq. bin number)
% vd: the spectrogram values squared of the contour corresponing the row,
% column.


%% Fit: 'untitled fit 1'. (helble)


%%%%[xData, yData, weights] = prepareCurveData( xs, ys, vd );
xData=xs;
yData=ys;
weights=vd;

%%%% Set up fittype and options.
ft = fittype( 'poly1' ); % set fittype to Linear polynomial curve
opts = fitoptions( ft ); % fit options opened for linear poly curve
opts.Lower = [-Inf -Inf];
opts.Upper = [Inf Inf];
opts.Weights = weights;
% lower and upper are set to infinity and the weight are set to the squared
% spectrogram values
% in opts, the method is set to 'LinearLeastSquares'

%%%% Fit model to data.
[fitresult, gof] = fit( xData, yData, ft, opts ); % linear 
a=1;
%% (helble)
% % Plot fit with data.
% figure( 'Name', 'untitled fit 1' );
% h = plot( fitresult, xData, yData );
% legend( h, 'ys vs. xs with vd', 'untitled fit 1', 'Location', 'NorthEast' );
% % Label axes
% xlabel( 'xs' );
% ylabel( 'ys' );
% grid on
% a=1;


